$date
	Sat Nov 07 13:05:21 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 8 ! prog_byte [7:0] $end
$var wire 4 " oprnd [3:0] $end
$var wire 4 # instr [3:0] $end
$var wire 12 $ PC [11:0] $end
$var reg 1 % Ea $end
$var reg 1 & Eb $end
$var reg 12 ' VAL [11:0] $end
$var reg 1 ( clk $end
$var reg 1 ) load $end
$var reg 1 * reset $end
$scope module p1 $end
$var wire 1 ( clk $end
$var wire 1 % ea $end
$var wire 1 & eb $end
$var wire 1 ) ld $end
$var wire 1 * reset $end
$var wire 12 + val [11:0] $end
$var wire 12 , pc [11:0] $end
$var wire 8 - pbyte [7:0] $end
$var wire 4 . opnd [3:0] $end
$var wire 4 / intr [3:0] $end
$scope module cnt12 $end
$var wire 1 ( clk0 $end
$var wire 1 % en $end
$var wire 1 ) load $end
$var wire 1 * reset0 $end
$var wire 12 0 val [11:0] $end
$var reg 12 1 sal [11:0] $end
$upscope $end
$scope module ft8b $end
$var wire 1 & E $end
$var wire 1 ( clk1 $end
$var wire 1 * reset1 $end
$var wire 8 2 outrom4k [7:0] $end
$var reg 4 3 instr [3:0] $end
$var reg 4 4 oprnd [3:0] $end
$upscope $end
$scope module rm4k $end
$var wire 12 5 adrs [11:0] $end
$var wire 8 6 outt [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1101100 6
b0 5
b0 4
b0 3
b1101100 2
b0 1
bx 0
b0 /
b0 .
b1101100 -
b0 ,
bx +
1*
x)
0(
bx '
x&
x%
b0 $
b0 #
b0 "
b1101100 !
$end
#1
b11001100 !
b11001100 -
b11001100 2
b11001100 6
b1 $
b1 ,
b1 1
b1 5
b110 #
b110 /
b110 3
b1100 "
b1100 .
b1100 4
0)
1&
1%
b0 '
b0 +
b0 0
0*
1(
#2
0(
#3
b11101110 !
b11101110 -
b11101110 2
b11101110 6
b10 $
b10 ,
b10 1
b10 5
b1100 #
b1100 /
b1100 3
1(
#4
0(
#5
b10001000 !
b10001000 -
b10001000 2
b10001000 6
b11 $
b11 ,
b11 1
b11 5
b1110 #
b1110 /
b1110 3
b1110 "
b1110 .
b1110 4
1(
#6
0(
#7
b11111111 !
b11111111 -
b11111111 2
b11111111 6
b100 $
b100 ,
b100 1
b100 5
b1000 #
b1000 /
b1000 3
b1000 "
b1000 .
b1000 4
1(
#8
0(
#9
bx !
bx -
bx 2
bx 6
b101 $
b101 ,
b101 1
b101 5
b1111 #
b1111 /
b1111 3
b1111 "
b1111 .
b1111 4
1(
#10
0(
#11
b110 $
b110 ,
b110 1
b110 5
bx #
bx /
bx 3
bx "
bx .
bx 4
1(
#12
0(
#13
b111 $
b111 ,
b111 1
b111 5
1(
#14
0(
#15
b1000 $
b1000 ,
b1000 1
b1000 5
1(
#16
0(
#17
b1001 $
b1001 ,
b1001 1
b1001 5
1(
#18
0(
#19
b1010 $
b1010 ,
b1010 1
b1010 5
1(
#20
0(
#21
1(
1)
b1010 '
b1010 +
b1010 0
#22
0(
#23
b1011 $
b1011 ,
b1011 1
b1011 5
1(
0)
#24
0(
#25
b1100 $
b1100 ,
b1100 1
b1100 5
1(
#26
0(
#27
b1101 $
b1101 ,
b1101 1
b1101 5
1(
#28
0(
#29
b1110 $
b1110 ,
b1110 1
b1110 5
1(
#30
0(
#31
b1111 $
b1111 ,
b1111 1
b1111 5
1(
#32
0(
#33
b10101010 !
b10101010 -
b10101010 2
b10101010 6
b10000 $
b10000 ,
b10000 1
b10000 5
1(
#34
0(
#35
bx !
bx -
bx 2
bx 6
b10001 $
b10001 ,
b10001 1
b10001 5
b1010 #
b1010 /
b1010 3
b1010 "
b1010 .
b1010 4
1(
#36
0(
#37
b10010 $
b10010 ,
b10010 1
b10010 5
bx #
bx /
bx 3
bx "
bx .
bx 4
1(
#38
0(
#39
b10011 $
b10011 ,
b10011 1
b10011 5
1(
#40
0(
#41
b10100 $
b10100 ,
b10100 1
b10100 5
1(
#42
0(
#43
b10101 $
b10101 ,
b10101 1
b10101 5
1(
#44
0(
#45
b10110 $
b10110 ,
b10110 1
b10110 5
1(
#46
0(
#47
b10111 $
b10111 ,
b10111 1
b10111 5
1(
#48
0(
#49
b11000 $
b11000 ,
b11000 1
b11000 5
1(
#50
0(
#51
b11001 $
b11001 ,
b11001 1
b11001 5
1(
#52
0(
#53
b11010 $
b11010 ,
b11010 1
b11010 5
1(
#54
0(
#55
b11011 $
b11011 ,
b11011 1
b11011 5
1(
#56
0(
#57
b11100 $
b11100 ,
b11100 1
b11100 5
1(
#58
0(
#59
b11101 $
b11101 ,
b11101 1
b11101 5
1(
#60
0(
#61
b11110 $
b11110 ,
b11110 1
b11110 5
1(
#62
0(
#63
b11111 $
b11111 ,
b11111 1
b11111 5
1(
#64
0(
#65
b100000 $
b100000 ,
b100000 1
b100000 5
1(
#66
0(
#67
b100001 $
b100001 ,
b100001 1
b100001 5
1(
#68
0(
#69
b100010 $
b100010 ,
b100010 1
b100010 5
1(
#70
0(
#71
b100011 $
b100011 ,
b100011 1
b100011 5
1(
#72
0(
#73
b100100 $
b100100 ,
b100100 1
b100100 5
1(
#74
0(
#75
b100101 $
b100101 ,
b100101 1
b100101 5
1(
#76
0(
#77
b100110 $
b100110 ,
b100110 1
b100110 5
1(
#78
0(
#79
b100111 $
b100111 ,
b100111 1
b100111 5
1(
#80
0(
#81
b101000 $
b101000 ,
b101000 1
b101000 5
1(
#82
0(
#83
b101001 $
b101001 ,
b101001 1
b101001 5
1(
#84
0(
#85
b101010 $
b101010 ,
b101010 1
b101010 5
1(
#86
0(
#87
b101011 $
b101011 ,
b101011 1
b101011 5
1(
#88
0(
#89
b101100 $
b101100 ,
b101100 1
b101100 5
1(
#90
0(
#91
b101101 $
b101101 ,
b101101 1
b101101 5
1(
#92
0(
#93
b101110 $
b101110 ,
b101110 1
b101110 5
1(
#94
0(
#95
b101111 $
b101111 ,
b101111 1
b101111 5
1(
#96
0(
#97
b110000 $
b110000 ,
b110000 1
b110000 5
1(
#98
0(
#99
b110001 $
b110001 ,
b110001 1
b110001 5
1(
#100
0(
